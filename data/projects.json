{
  "title": "Projects",
  "icon": "lightbulb_outline",
  "projects": [
    {
      "name": "Ventilator App",
      "image": "img/ventilator-app.jpg",
      "description": "Lead work on Android application written in React Native to allow connecting to a ventilator via cable and show information about ventilation. This app also alarms based on certain problems.",
      "tags": [
        {
          "tag": "TypeScript",
          "type": "language"
        },
        {
          "tag": "React Native",
          "type": "framework"
        }
      ],
      "footnotes": [
        {
          "type": "time",
          "time": {
            "start": "2020-05-25"
          }
        },
        {
          "type": "code",
          "code": {
            "title": "GitHub",
            "source": "https://github.com/OpenVentPk/ventilator-app"
          }
        }
      ]
    },
    {
      "name": "World",
      "image": "img/world.jpg",
      "description": "The main application for PCs4Kids, presenting an interactive map for the kids to explore, each different location leading a different educational activity.",
      "tags": [
        {
          "tag": "TypeScript",
          "type": "language"
        },
        {
          "tag": "React",
          "type": "framework"
        }
      ],
      "footnotes": [
        {
          "type": "time",
          "time": {
            "start": "2019-01-12"
          }
        },
        {
          "type": "code",
          "code": {
            "title": "GitHub",
            "source": "https://github.com/PCs4KIDS/world"
          }
        },
        {
          "type": "link",
          "link": {
            "title": "Website",
            "source": "https://pcs4kids.github.io/world"
          }
        }
      ]
    },
    {
      "name": "Round The World",
      "image": "img/round-the-world.jpg",
      "description": "One of the games created as an educational activity for kids. While another developer created this application, I converted it into a library which could be added to the main World application to be run from the overall interface. This involved restructuring the program and moving dependencies from being hard-coded to be downloaded via npm as well as being minified into UMD form.",
      "tags": [
        {
          "tag": "JavaScript",
          "type": "language"
        },
        {
          "tag": "Phaser",
          "type": "framework"
        },
        {
          "tag": "Webpack",
          "type": "tool"
        }
      ],
      "footnotes": [
        {
          "type": "time",
          "time": {
            "start": "2018-11-27"
          }
        },
        {
          "type": "code",
          "code": {
            "title": "GitHub",
            "source": "https://github.com/PCs4KIDS/round-the-world"
          }
        },
        {
          "type": "link",
          "link": {
            "title": "Website",
            "source": "https://pcs4kids.github.io/round-the-world/"
          }
        }
      ]
    },
    {
      "name": "Basic Custom Map Library",
      "image": "img/basic-custom-map.jpg",
      "description": "This is a small library created to aid in other projects for the charity PCs4Kids. This allows the user of the library to provide images and coordinates and uses SnapSVG to create an interactive map.",
      "tags": [
        {
          "tag": "TypeScript",
          "type": "language"
        },
        {
          "tag": "SnapSVG",
          "type": "framework"
        }
      ],
      "footnotes": [
        {
          "type": "time",
          "time": {
            "start": "2018-11-27"
          }
        },
        {
          "type": "code",
          "code": {
            "title": "GitHub",
            "source": "https://github.com/PCs4KIDS/basic-custom-map"
          }
        },
        {
          "type": "link",
          "link": {
            "title": "Demo",
            "source": "https://pcs4kids.github.io/basic-custom-map/"
          }
        }
      ]
    },
    {
      "name": "Outcome Graph Library",
      "image": "img/outcome-graph.jpg",
      "description": "This is a small library which converts multiple sessions of Strength and Difficulties Questionnaires (SDQ) into a ChartJS compatible datasets to display a radar chart. It expects a certain strucutre and colours each session distintly different from the other ones. It can handle multiple sessions as well as numerous areas, all of which may not be present on each session.",
      "tags": [
        {
          "tag": "JavaScript",
          "type": "language"
        },
        {
          "tag": "ChartJS",
          "type": "framework"
        },
        {
          "tag": "MomentJS",
          "type": "framework"
        }
      ],
      "footnotes": [
        {
          "type": "time",
          "time": {
            "start": "2017-03-15"
          }
        },
        {
          "type": "code",
          "code": {
            "title": "GitHub",
            "source": "https://github.com/ALDLife/outcome-graph"
          }
        }
      ]
    },
    {
      "name": "Personal Website",
      "image": "img/personal_website.jpg",
      "description": "This webpage; the current website is version number 3. The initial version of this website was done in 2011, soon after starting university, using a website template and can be found here. That was then revamped in September of 2014, started from scratch and created using bootstrap, with a mobile-friendly version too. This has been worked on since the start of this year, changing the layout and framework behind it (twitter boostrap to material design materialize), as well as adding new features such as the timeline.",
      "tags": [
        {
          "tag": "JavaScript",
          "type": "language"
        },
        {
          "tag": "Python",
          "type": "language"
        },
        {
          "tag": "Bootstrap",
          "type": "framework"
        },
        {
          "tag": "Materialize",
          "type": "framework"
        }
      ],
      "footnotes": [
        {
          "type": "time",
          "time": {
            "start": "2015-08-17"
          }
        },
        {
          "type": "code",
          "code": {
            "title": "GitHub",
            "source": "https://github.com/themakshter/themakshter.github.io"
          }
        },
        {
          "type": "link",
          "link": {
            "title": "Version 3.0",
            "source": "./"
          }
        },
        {
          "type": "link",
          "link": {
            "title": "Version 2.0",
            "source": "./v2/"
          }
        },
        {
          "type": "link",
          "link": {
            "title": "Version 1.0",
            "source": "./v1/"
          }
        }
      ]
    },
    {
      "name": "NHS Waiting Times Application",
      "image": "img/nhs_waiting_times_map.jpg",
      "description": "A group project application which, given a location, finds the closest hospitals with the least amount of waiting times for Accident and Emergency departments (A &amp; E). It uses open data from the NHS in the form of percentage of patients seen in the first four hours as well as hospital ratings and combines this with OpenStreetMap to provide locations on the map. It can be used on the web or on a mobile phone just as easily. ",
      "tags": [
        {
          "tag": "JavaScript",
          "type": "language"
        },
        {
          "tag": "Mapbox",
          "type": "framework"
        },
        {
          "tag": "Bootstrap",
          "type": "framework"
        }
      ],
      "footnotes": [
        {
          "type": "time",
          "time": {
            "start": "2015-08-17"
          }
        },
        {
          "type": "link",
          "link": {
            "title": "Website",
            "source": "./NHSWaitingTimesApplication"
          }
        },
        {
          "type": "documentation",
          "documentation": {
            "title": "Project Report",
            "source": "./files/nhs_waiting_times_application_report.pdf"
          }
        }
      ]
    },
    {
      "name": "Mobile Intervention Authoring",
      "image": "img/intervention_editor.jpg",
      "description": "A group development project (GDP) improving and extending a mobile intervention editor to create an intervention for cochlear implant users so that they can do regular hearing check ups in the comfort of their homes. This project involved implementing features to add media files on the web-based intervention editor and functionality to play these media files on the intervention client application. Lastly, the intervention was created with numerous optimisations on the editor and run on the client application. The intervention editor was written mostly in CoffeeScript with BackboneJS and the client application was for Android devices.",
      "tags": [
        {
          "tag": "CoffeeScript",
          "type": "language"
        },
        {
          "tag": "Java",
          "type": "language"
        },
        {
          "tag": "BackboneJS",
          "type": "framework"
        },
        {
          "tag": "Bootstrap",
          "type": "framework"
        }
      ],
      "footnotes": [
        {
          "type": "time",
          "time": {
            "start": "2015-08-17"
          }
        },
        {
          "type": "documentation",
          "documentation": {
            "title": "Report",
            "source": "./files/mobile_intervention_authoring_report.pdf"
          }
        },
        {
          "type": "documentation",
          "documentation": {
            "title": "Poster",
            "source": "./files/mobile_intervention_authoring_poster.pdf"
          }
        }
      ]
    },
    {
      "name": "Agent Elman",
      "image": "img/agent_elman.jpg",
      "description": "Group project to create an intelligent agent for participation in the Trading Agent Competition. In the competition, the agent competed with other agents to compose holiday packages for clients for the least amount of money. Numerous strategies were employed to make sure good packages could be created such as bidding low for unwanted tickets so that they might be used in potential packages. The agent finished a respectable 7th postion from around 25 agents competing.",
      "tags": [
        {
          "tag": "Java",
          "type": "language"
        },
        {
          "tag": "TAC Agentware",
          "type": "framework"
        }
      ],
      "footnotes": [
        {
          "type": "time",
          "time": {
            "start": "2015-08-17"
          }
        },
        {
          "type": "code",
          "code": {
            "title": "GitHub",
            "source": "https://github.com/themakshter/AgentElman"
          }
        },
        {
          "type": "documentation",
          "documentation": {
            "title": "Report",
            "source": "./files/agent_elman_report.pdf"
          }
        }
      ]
    },
    {
      "name": "IdeaBoard",
      "image": "img/ideaboard.jpg",
      "description": "A group project to create a note-taking web applicaiton for a web development module. Attempted abstraction of the idea board model, a board where people stick a number of post-it notes on to help visualise their thoughts. This application allows people to create boards and have notes in a column of their choosing. The notes themselves can be customised in relation to text formatting and colour.",
      "tags": [
        {
          "tag": "JavaScript",
          "type": "language"
        },
        {
          "tag": "MongoDB",
          "type": "database"
        },
        {
          "tag": "NodeJS",
          "type": "framework"
        },
        {
          "tag": "Bootstrap",
          "type": "framework"
        },
        {
          "tag": "jQuery",
          "type": "framework"
        }
      ],
      "footnotes": [
        {
          "type": "time",
          "time": {
            "start": "2015-08-17"
          }
        },
        {
          "type": "code",
          "code": {
            "title": "GitHub",
            "source": "https://github.com/themakshter/Ideaboard"
          }
        },
        {
          "type": "link",
          "link": {
            "title": "Website",
            "source": "https://ideaboardapp.herokuapp.com/"
          }
        },
        {
          "type": "documentation",
          "documentation": {
            "title": "User Manual",
            "source": "https://ideaboardapp.herokuapp.com/manuals/userManual.html"
          }
        },
        {
          "type": "documentation",
          "documentation": {
            "title": "Technical Documentation",
            "source": "https://ideaboardapp.herokuapp.com/manuals/technicalManual.html"
          }
        }
      ]
    },
    {
      "name": "Privacy Matters",
      "image": "img/privacy_matters.jpg",
      "description": "Individual project of an online resource showing the information companies in the United Kingdom store and share. Users can search for the desired companies and view the reasons for processing data, the data processed, whom it is processed from and whom it is shared with. There are also data visualisations provided, such as an overview of the information collected as compared to the general median/average. Moreover, users can view similar companies. This project is now deprecated.",
      "tags": [
        {
          "tag": "JavaScript",
          "type": "language"
        },
        {
          "tag": "MongoDB",
          "type": "database"
        },
        {
          "tag": "Bootstrap",
          "type": "framework"
        },
        {
          "tag": "Play Framework",
          "type": "framework"
        }
      ],
      "footnotes": [
        {
          "type": "time",
          "time": {
            "start": "2015-08-17"
          }
        },
        {
          "type": "code",
          "code": {
            "title": "GitHub",
            "source": "https://github.com/themakshter/PrivacyMatters"
          }
        },
        {
          "type": "link",
          "link": {
            "title": "Website",
            "source": "https://privacymatters.herokuapp.com/"
          }
        },
        {
          "type": "documentation",
          "documentation": {
            "title": "Project Report",
            "source": "./files/privacy_matters_report.pdf"
          }
        },
        {
          "type": "link",
          "link": {
            "title": "Demo Video (Zip)",
            "source": "./files/privacy-matters-demo.zip"
          }
        }
      ]
    },
    {
      "name": "Type Pong",
      "image": "img/type_pong.jpg",
      "description": "A group project web application aiming to improve typing speeds where users play pong while typing. Correctly typed words allow users to move the paddle to meet the ball. Users can play against the AI in levels, where AI gets better with levels, or in challenge mode, where the AI is perfect, never missing a balll and users try to last as long as possible. Users can also play against each other and view their high scores in these different game modes. ",
      "tags": [
        {
          "tag": "JavaScript",
          "type": "language"
        },
        {
          "tag": "Python",
          "type": "language"
        },
        {
          "tag": "SQL",
          "type": "database"
        },
        {
          "tag": "jQuery",
          "type": "framework"
        }
      ],
      "footnotes": [
        {
          "type": "time",
          "time": {
            "start": "2015-08-17"
          }
        },
        {
          "type": "code",
          "code": {
            "title": "GitHub",
            "source": "https://github.com/themakshter/Ideaboard"
          }
        },
        {
          "type": "documentation",
          "documentation": {
            "title": "Report",
            "source": "./files/type_pong_report.pdf"
          }
        }
      ]
    },
    {
      "name": "Clangers",
      "image": "img/the_clangers.jpg",
      "description": "This application depicts a small world filled with Clangers, characters from the old BBC show. This application allows the user to explore the world which includes a few clangers as well as mountainous terrain on the moon while also providing an automatic tour of the main features. The models were created in Blender.",
      "tags": [
        {
          "tag": "C++",
          "type": "language"
        },
        {
          "tag": "OpenGL",
          "type": "framework"
        },
        {
          "tag": "Blender",
          "type": "tool"
        }
      ],
      "footnotes": [
        {
          "type": "time",
          "time": {
            "start": "2015-08-17"
          }
        },
        {
          "type": "code",
          "code": {
            "title": "GitHub",
            "source": "https://github.com/themakshter/Clangers"
          }
        }
      ]
    },
    {
      "name": "Crossword Puzzle",
      "image": "img/crossword_puzzle.jpg",
      "description": "A straightforward crossword puzzle, allowing users to easily type across the boxes with their answers. The clues can be easily highlighted and there exists afunctionality to inform the users of which ones have been correctly filled. This application was made using Swing and AWT libraries.",
      "tags": [
        {
          "tag": "Java",
          "type": "language"
        },
        {
          "tag": "Swing",
          "type": "library"
        },
        {
          "tag": "AWT",
          "type": "library"
        }
      ],
      "footnotes": [
        {
          "type": "time",
          "time": {
            "start": "2015-08-17"
          }
        },
        {
          "type": "code",
          "code": {
            "title": "GitHub",
            "source": "https://github.com/themakshter/CrosswordApplication"
          }
        }
      ]
    },
    {
      "name": "Fractal Viewer",
      "image": "img/fractal_viewer.jpg",
      "description": "This application, created using the Swing and AWT libraries , displays a Mandelbrot set to the user and allows them to zoom into it as they wish. Users can also view the Julia set for a specific point on the Mandlebrot set and also save the image. The Mandlebrot set is available in three different calculation algorithms and two colour schemes.",
      "tags": [
        {
          "tag": "Java",
          "type": "language"
        },
        {
          "tag": "Swing",
          "type": "library"
        },
        {
          "tag": "AWT",
          "type": "library"
        }
      ],
      "footnotes": [
        {
          "type": "time",
          "time": {
            "start": "2015-08-17"
          }
        },
        {
          "type": "code",
          "code": {
            "title": "GitHub",
            "source": "https://github.com/themakshter/FractalViewer"
          }
        }
      ]
    }
  ]
}
