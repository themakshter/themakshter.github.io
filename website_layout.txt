Mohammad Ali Khan

<picture>

<contact links>
facebook,twitter,google+,github,linkedin,github,email,dotabuff

<intro>
I am a 22 year old computer scientist who is extremely passionate about web development and data visualisation. Currently residing in London, I graduated from the University of Southampton and am now working at FactSet as a Software Engineer. I consider myself best in Java but having spend a great amount of time developing numerous applications, I can claim good experience in web-related technologies such as JavaScript and some of its common frameworks and libraries such as jQuery,d3 and AngularJS.
Outside of programming, I enjoy reading books; my favourite genre is fantasy and my favourite author is Brandon Sanderson. Moreover, I play many videos. While Dota 2 is my most regularly played game, the Mass Effect and Grand Theft Auto series are my all-time favourites in additon to the recent Fallout games. The remaining time is spent watching football games as well as taking part in matches myself. From the teams I watch on the television, I follow Chelsea F.C.

<career>
FactSet Europe Ltd.
August 2015 to Present
Software Engineer

J.P. Morgan Chase and Co.
June 2014 to August 2014
Technology Intern

Micro Focus Ltd.
June 2013 to August 2013
Product Development Intern

<education>
University of Southampton
September 2011 to June 2015
Masters of Engineering in Computer Science

<skills>

Java
C#
JavaScript
HTML
CSS

PHP
Python

C++
C

NodeJS
AngularJS
D3
SQL
MongoDB
Play Framework
Bootstrap

English
Urdu
Hindi

<projects>

Personal Website (HTML, CSS, JavaScript)


NHS Waiting Times Application (HTML, CSS, JavaScript)
A group project application which, given a location, finds the closest hospitals with the least amount of waiting times for Accident and Emergency departments (A & E). It uses open data from the NHS in the form of percentage of patients seen in the first four hours as well as hospital ratings and combines this with OpenStreetMap to provide locations on the map. It can be used on the web or on a mobile phone just as easily. Project report can be found here. 

Mobile Intervention Authoring (Java, HTML, CSS, CoffeeScript)
A group development project (GDP) improving and extending a mobile intervention editor to create an intervention for cochlear implant users so that they can do regular hearing check ups in the comfort of their homes. This project involved implementing features to add media files on the web-based intervention editor and functionality to play these media files on the intervention client application. Lastly, the intervention was created with numerous optimisations on the editor and run on the client application. The intervention editor was written mostly in CoffeeScript with BackboneJS and the client application was for Android devices. The report for this project can be found here.

IdeaBoard (HTML, CSS, JavaScript)
A group project to create a note-taking web applicaiton for a web development module. Attempted abstraction of the idea board model, a board where people stick a number of post-it notes on to help visualise their thoughts. This application allows people to create boards and have notes in a column of their choosing. The notes themselves can be customised in relation to text formatting and colour. This application has a NodeJS backend with a MongoDB database and can currently be found here . The user manual for this application is available here and the technical manual can be accessed here .

Agent Elman	(Java)
Group project to create an intelligent agent for participation in the Trading Agent Competition. In the competition, the agent competed with others to compose holiday packages for clients for the least amount of money. The agent finished a respectable 7th postion from around 20+ agents competing. The report detailing the strategies can be found here. 

Privacy Matters (Java, HTML, CSS, JavaScript)
Individual project of an online resource showing the information companies in the United Kingdomstore and share. Users can search for the desired companies and view the reasons for processing data, the data processed, whom it is processed from and whom it is shared with. There are also data visualisations provided, such as an overview of the information collected as compared to the general median/average. Moreover, users can view similar companies. The backend of this application was coded in Java with the Play Framework while the front end was written in HTML, CSS and JavaScript . The database used was MongoDB. 
The application can currently be found here and the final report of the project is present here.

Type Pong (Python, JavaScript, HTML, CSS)
A group project web application aiming to improve typing speeds where users play pong while typing, typing words correctly to move the paddle to meet the ball. Users can play against the AI in levels, where AI gets better with time, or in challenge mode, where AI is perfect and users have to last as long as possible. Users can also play against each other and view their high scores. The application can currently be found here. 

Clangers (C++)
This application depicted a small world filled with Clangers. Coded using the OpenGL 3.3+ library, this application allows the user to explore the world while also providing an automatic tour of the main features. The models were created in Blender.

Crossword Application (Java)
A straightforward crossword puzzle, allowing users to easily type across the boxes with their answers. The clues can be easily highlighted and there exists afunctionality to inform the users of which ones have been correctly filled. This application was made using Swing and AWT libraries.

Fractal Viewer (Java)
This application, created using the Swing and AWT libraries , displays a Mandelbrot set to the user and allows them to zoom into it as they wish. Users can also view the Julia set for a specific point on the Mandlebrot set and also save the image. The Mandlebrot set is available in three different calculation algorithms and two colour schemes.

<timeline>


